// Generated from ECL.g4 by ANTLR 4.4
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class ECLLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.4", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__35=1, T__34=2, T__33=3, T__32=4, T__31=5, T__30=6, T__29=7, T__28=8, 
		T__27=9, T__26=10, T__25=11, T__24=12, T__23=13, T__22=14, T__21=15, T__20=16, 
		T__19=17, T__18=18, T__17=19, T__16=20, T__15=21, T__14=22, T__13=23, 
		T__12=24, T__11=25, T__10=26, T__9=27, T__8=28, T__7=29, T__6=30, T__5=31, 
		T__4=32, T__3=33, T__2=34, T__1=35, T__0=36, MEMBEROF=37, WILDCARD=38, 
		DESCENDANTOF=39, DESCENDANTORSELFOF=40, ANCESTOROF=41, ANCESTORORSELFOF=42, 
		TO=43, MANY=44, REVERSEFLAG=45, EXPRESSIONCOMPARISONOPERATOR=46, NUMERICCOMPARISONOPERATOR=47, 
		STRINGCOMPARISONOPERATOR=48, SP=49, HTAB=50, CR=51, LF=52, QM=53, BS=54, 
		ALPHA=55, DIGIT=56, ZERO=57, DIGITNONZERO=58, WS1=59, WS2=60, ANY1=61, 
		ANY2=62, ANY3=63, UTF2=64, UTF3_HELPER1=65, UTF3_HELPER2=66, UTF3_HELPER3=67, 
		UTF3_HELPER4=68, UTF4_HELPER1=69, UTF4_HELPER2=70, UTF4_HELPER3=71, UTF8_TAIL=72;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'", "'\\u0005'", 
		"'\\u0006'", "'\\u0007'", "'\b'", "'\t'", "'\n'", "'\\u000B'", "'\f'", 
		"'\r'", "'\\u000E'", "'\\u000F'", "'\\u0010'", "'\\u0011'", "'\\u0012'", 
		"'\\u0013'", "'\\u0014'", "'\\u0015'", "'\\u0016'", "'\\u0017'", "'\\u0018'", 
		"'\\u0019'", "'\\u001A'", "'\\u001B'", "'\\u001C'", "'\\u001D'", "'\\u001E'", 
		"'\\u001F'", "' '", "'!'", "'\"'", "'#'", "'$'", "'%'", "'&'", "'''", 
		"'('", "')'", "'*'", "'+'", "','", "'-'", "'.'", "'/'", "'0'", "'1'", 
		"'2'", "'3'", "'4'", "'5'", "'6'", "'7'", "'8'", "'9'", "':'", "';'", 
		"'<'", "'='", "'>'", "'?'", "'@'", "'A'", "'B'", "'C'", "'D'", "'E'", 
		"'F'", "'G'", "'H'"
	};
	public static final String[] ruleNames = {
		"T__35", "T__34", "T__33", "T__32", "T__31", "T__30", "T__29", "T__28", 
		"T__27", "T__26", "T__25", "T__24", "T__23", "T__22", "T__21", "T__20", 
		"T__19", "T__18", "T__17", "T__16", "T__15", "T__14", "T__13", "T__12", 
		"T__11", "T__10", "T__9", "T__8", "T__7", "T__6", "T__5", "T__4", "T__3", 
		"T__2", "T__1", "T__0", "MEMBEROF", "WILDCARD", "DESCENDANTOF", "DESCENDANTORSELFOF", 
		"ANCESTOROF", "ANCESTORORSELFOF", "TO", "MANY", "REVERSEFLAG", "EXPRESSIONCOMPARISONOPERATOR", 
		"NUMERICCOMPARISONOPERATOR", "STRINGCOMPARISONOPERATOR", "SP", "HTAB", 
		"CR", "LF", "QM", "BS", "ALPHA", "DIGIT", "ZERO", "DIGITNONZERO", "WS1", 
		"WS2", "ANY1", "ANY2", "ANY3", "UTF2", "UTF3_HELPER1", "UTF3_HELPER2", 
		"UTF3_HELPER3", "UTF3_HELPER4", "UTF4_HELPER1", "UTF4_HELPER2", "UTF4_HELPER3", 
		"UTF8_TAIL"
	};


	public ECLLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "ECL.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2J\u0135\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\tE\4F\tF\4G\tG\4H\tH\4I"+
		"\tI\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3\t\3\t\3"+
		"\n\3\n\3\13\3\13\3\f\3\f\3\r\3\r\3\16\3\16\3\17\3\17\3\20\3\20\3\21\3"+
		"\21\3\22\3\22\3\23\3\23\3\24\3\24\3\25\3\25\3\26\3\26\3\27\3\27\3\30\3"+
		"\30\3\31\3\31\3\32\3\32\3\33\3\33\3\34\3\34\3\35\3\35\3\36\3\36\3\37\3"+
		"\37\3 \3 \3!\3!\3\"\3\"\3#\3#\3$\3$\3%\3%\3&\3&\3\'\3\'\3(\3(\3)\3)\3"+
		")\3*\3*\3+\3+\3+\3,\3,\3,\3-\3-\3.\3.\3/\3/\3/\5/\u00f4\n/\3\60\3\60\3"+
		"\60\3\60\3\60\3\60\3\60\3\60\3\60\5\60\u00ff\n\60\3\61\3\61\3\61\5\61"+
		"\u0104\n\61\3\62\3\62\3\63\3\63\3\64\3\64\3\65\3\65\3\66\3\66\3\67\3\67"+
		"\38\38\39\39\3:\3:\3;\3;\3<\3<\3=\3=\3>\3>\3?\3?\3@\3@\3A\3A\3B\3B\3C"+
		"\3C\3D\3D\3E\3E\3F\3F\3G\3G\3H\3H\3I\3I\2\2J\3\3\5\4\7\5\t\6\13\7\r\b"+
		"\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26"+
		"+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S"+
		"+U,W-Y.[/]\60_\61a\62c\63e\64g\65i\66k\67m8o9q:s;u<w=y>{?}@\177A\u0081"+
		"B\u0083C\u0085D\u0087E\u0089F\u008bG\u008dH\u008fI\u0091J\3\2\3\4\2C\\"+
		"c|\u013b\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2"+
		"\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27"+
		"\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2"+
		"\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2"+
		"\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2"+
		"\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2"+
		"\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S"+
		"\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2"+
		"\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2"+
		"\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2w\3\2\2\2\2y"+
		"\3\2\2\2\2{\3\2\2\2\2}\3\2\2\2\2\177\3\2\2\2\2\u0081\3\2\2\2\2\u0083\3"+
		"\2\2\2\2\u0085\3\2\2\2\2\u0087\3\2\2\2\2\u0089\3\2\2\2\2\u008b\3\2\2\2"+
		"\2\u008d\3\2\2\2\2\u008f\3\2\2\2\2\u0091\3\2\2\2\3\u0093\3\2\2\2\5\u0095"+
		"\3\2\2\2\7\u0097\3\2\2\2\t\u0099\3\2\2\2\13\u009b\3\2\2\2\r\u009d\3\2"+
		"\2\2\17\u009f\3\2\2\2\21\u00a1\3\2\2\2\23\u00a3\3\2\2\2\25\u00a5\3\2\2"+
		"\2\27\u00a7\3\2\2\2\31\u00a9\3\2\2\2\33\u00ab\3\2\2\2\35\u00ad\3\2\2\2"+
		"\37\u00af\3\2\2\2!\u00b1\3\2\2\2#\u00b3\3\2\2\2%\u00b5\3\2\2\2\'\u00b7"+
		"\3\2\2\2)\u00b9\3\2\2\2+\u00bb\3\2\2\2-\u00bd\3\2\2\2/\u00bf\3\2\2\2\61"+
		"\u00c1\3\2\2\2\63\u00c3\3\2\2\2\65\u00c5\3\2\2\2\67\u00c7\3\2\2\29\u00c9"+
		"\3\2\2\2;\u00cb\3\2\2\2=\u00cd\3\2\2\2?\u00cf\3\2\2\2A\u00d1\3\2\2\2C"+
		"\u00d3\3\2\2\2E\u00d5\3\2\2\2G\u00d7\3\2\2\2I\u00d9\3\2\2\2K\u00db\3\2"+
		"\2\2M\u00dd\3\2\2\2O\u00df\3\2\2\2Q\u00e1\3\2\2\2S\u00e4\3\2\2\2U\u00e6"+
		"\3\2\2\2W\u00e9\3\2\2\2Y\u00ec\3\2\2\2[\u00ee\3\2\2\2]\u00f3\3\2\2\2_"+
		"\u00fe\3\2\2\2a\u0103\3\2\2\2c\u0105\3\2\2\2e\u0107\3\2\2\2g\u0109\3\2"+
		"\2\2i\u010b\3\2\2\2k\u010d\3\2\2\2m\u010f\3\2\2\2o\u0111\3\2\2\2q\u0113"+
		"\3\2\2\2s\u0115\3\2\2\2u\u0117\3\2\2\2w\u0119\3\2\2\2y\u011b\3\2\2\2{"+
		"\u011d\3\2\2\2}\u011f\3\2\2\2\177\u0121\3\2\2\2\u0081\u0123\3\2\2\2\u0083"+
		"\u0125\3\2\2\2\u0085\u0127\3\2\2\2\u0087\u0129\3\2\2\2\u0089\u012b\3\2"+
		"\2\2\u008b\u012d\3\2\2\2\u008d\u012f\3\2\2\2\u008f\u0131\3\2\2\2\u0091"+
		"\u0133\3\2\2\2\u0093\u0094\7q\2\2\u0094\4\3\2\2\2\u0095\u0096\7u\2\2\u0096"+
		"\6\3\2\2\2\u0097\u0098\7w\2\2\u0098\b\3\2\2\2\u0099\u009a\7/\2\2\u009a"+
		"\n\3\2\2\2\u009b\u009c\7}\2\2\u009c\f\3\2\2\2\u009d\u009e\7\177\2\2\u009e"+
		"\16\3\2\2\2\u009f\u00a0\7C\2\2\u00a0\20\3\2\2\2\u00a1\u00a2\7f\2\2\u00a2"+
		"\22\3\2\2\2\u00a3\u00a4\7*\2\2\u00a4\24\3\2\2\2\u00a5\u00a6\7K\2\2\u00a6"+
		"\26\3\2\2\2\u00a7\u00a8\7.\2\2\u00a8\30\3\2\2\2\u00a9\u00aa\7O\2\2\u00aa"+
		"\32\3\2\2\2\u00ab\u00ac\7\60\2\2\u00ac\34\3\2\2\2\u00ad\u00ae\7p\2\2\u00ae"+
		"\36\3\2\2\2\u00af\u00b0\7Q\2\2\u00b0 \3\2\2\2\u00b1\u00b2\7t\2\2\u00b2"+
		"\"\3\2\2\2\u00b3\u00b4\7U\2\2\u00b4$\3\2\2\2\u00b5\u00b6\7\60\2\2\u00b6"+
		"&\3\2\2\2\u00b7\u00b8\7W\2\2\u00b8(\3\2\2\2\u00b9\u00ba\7\u00f6\2\2\u00ba"+
		"*\3\2\2\2\u00bb\u00bc\7<\2\2\u00bc,\3\2\2\2\u00bd\u00be\7]\2\2\u00be."+
		"\3\2\2\2\u00bf\u00c0\7~\2\2\u00c0\60\3\2\2\2\u00c1\u00c2\7\u00e2\2\2\u00c2"+
		"\62\3\2\2\2\u00c3\u00c4\7_\2\2\u00c4\64\3\2\2\2\u00c5\u00c6\7\u00f2\2"+
		"\2\u00c6\66\3\2\2\2\u00c7\u00c8\7c\2\2\u00c88\3\2\2\2\u00c9\u00ca\7%\2"+
		"\2\u00ca:\3\2\2\2\u00cb\u00cc\7F\2\2\u00cc<\3\2\2\2\u00cd\u00ce\7\u00ef"+
		"\2\2\u00ce>\3\2\2\2\u00cf\u00d0\7k\2\2\u00d0@\3\2\2\2\u00d1\u00d2\7+\2"+
		"\2\u00d2B\3\2\2\2\u00d3\u00d4\7-\2\2\u00d4D\3\2\2\2\u00d5\u00d6\7/\2\2"+
		"\u00d6F\3\2\2\2\u00d7\u00d8\7o\2\2\u00d8H\3\2\2\2\u00d9\u00da\7P\2\2\u00da"+
		"J\3\2\2\2\u00db\u00dc\7`\2\2\u00dcL\3\2\2\2\u00dd\u00de\7,\2\2\u00deN"+
		"\3\2\2\2\u00df\u00e0\7>\2\2\u00e0P\3\2\2\2\u00e1\u00e2\7>\2\2\u00e2\u00e3"+
		"\7>\2\2\u00e3R\3\2\2\2\u00e4\u00e5\7@\2\2\u00e5T\3\2\2\2\u00e6\u00e7\7"+
		"@\2\2\u00e7\u00e8\7@\2\2\u00e8V\3\2\2\2\u00e9\u00ea\7\60\2\2\u00ea\u00eb"+
		"\7\60\2\2\u00ebX\3\2\2\2\u00ec\u00ed\7,\2\2\u00edZ\3\2\2\2\u00ee\u00ef"+
		"\7T\2\2\u00ef\\\3\2\2\2\u00f0\u00f4\7?\2\2\u00f1\u00f2\7#\2\2\u00f2\u00f4"+
		"\7?\2\2\u00f3\u00f0\3\2\2\2\u00f3\u00f1\3\2\2\2\u00f4^\3\2\2\2\u00f5\u00ff"+
		"\7?\2\2\u00f6\u00f7\7#\2\2\u00f7\u00ff\7?\2\2\u00f8\u00f9\7>\2\2\u00f9"+
		"\u00ff\7?\2\2\u00fa\u00ff\7>\2\2\u00fb\u00fc\7@\2\2\u00fc\u00ff\7?\2\2"+
		"\u00fd\u00ff\7@\2\2\u00fe\u00f5\3\2\2\2\u00fe\u00f6\3\2\2\2\u00fe\u00f8"+
		"\3\2\2\2\u00fe\u00fa\3\2\2\2\u00fe\u00fb\3\2\2\2\u00fe\u00fd\3\2\2\2\u00ff"+
		"`\3\2\2\2\u0100\u0104\7?\2\2\u0101\u0102\7#\2\2\u0102\u0104\7?\2\2\u0103"+
		"\u0100\3\2\2\2\u0103\u0101\3\2\2\2\u0104b\3\2\2\2\u0105\u0106\7\"\2\2"+
		"\u0106d\3\2\2\2\u0107\u0108\7\13\2\2\u0108f\3\2\2\2\u0109\u010a\7\17\2"+
		"\2\u010ah\3\2\2\2\u010b\u010c\7\f\2\2\u010cj\3\2\2\2\u010d\u010e\7$\2"+
		"\2\u010el\3\2\2\2\u010f\u0110\7^\2\2\u0110n\3\2\2\2\u0111\u0112\t\2\2"+
		"\2\u0112p\3\2\2\2\u0113\u0114\4\62;\2\u0114r\3\2\2\2\u0115\u0116\7\62"+
		"\2\2\u0116t\3\2\2\2\u0117\u0118\4\63;\2\u0118v\3\2\2\2\u0119\u011a\4#"+
		"}\2\u011ax\3\2\2\2\u011b\u011c\4\177\u0080\2\u011cz\3\2\2\2\u011d\u011e"+
		"\4\"#\2\u011e|\3\2\2\2\u011f\u0120\4%]\2\u0120~\3\2\2\2\u0121\u0122\4"+
		"_\u0080\2\u0122\u0080\3\2\2\2\u0123\u0124\4\u00c4\u00e1\2\u0124\u0082"+
		"\3\2\2\2\u0125\u0126\4\u00a2\u00c1\2\u0126\u0084\3\2\2\2\u0127\u0128\4"+
		"\u00e3\u00ee\2\u0128\u0086\3\2\2\2\u0129\u012a\4\u0082\u00a1\2\u012a\u0088"+
		"\3\2\2\2\u012b\u012c\4\u00f0\u00f1\2\u012c\u008a\3\2\2\2\u012d\u012e\4"+
		"\u0092\u00c1\2\u012e\u008c\3\2\2\2\u012f\u0130\4\u00f3\u00f5\2\u0130\u008e"+
		"\3\2\2\2\u0131\u0132\4\u0082\u0091\2\u0132\u0090\3\2\2\2\u0133\u0134\4"+
		"\u0082\u00c1\2\u0134\u0092\3\2\2\2\6\2\u00f3\u00fe\u0103\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}